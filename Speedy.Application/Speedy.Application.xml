<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Speedy.Application</name>
    </assembly>
    <members>
        <member name="T:Speedy.Application.DeviceId">
            <summary>
            Provides unique device identifiers.
            </summary>
        </member>
        <member name="M:Speedy.Application.DeviceId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.DeviceId" /> class.
            </summary>
        </member>
        <member name="P:Speedy.Application.DeviceId.Components">
            <summary>
            A dictionary containing the components that will make up the device identifier.
            </summary>
        </member>
        <member name="P:Speedy.Application.DeviceId.Formatter">
            <summary>
            Gets or sets the formatter to use.
            </summary>
        </member>
        <member name="M:Speedy.Application.DeviceId.AddComponent(System.String,Speedy.Application.IDeviceIdComponent)">
            <summary>
            Adds a component to the device identifier.
            If a component with the specified name already exists, it will be replaced with this newly added component.
            </summary>
            <param name="name"> The component name. </param>
            <param name="component"> The component to add. </param>
            <returns> The builder instance. </returns>
        </member>
        <member name="M:Speedy.Application.DeviceId.AddMacAddress(System.Boolean)">
            <summary>
            Adds the MAC address to the device identifier, optionally excluding wireless adapters.
            </summary>
            <param name="excludeWireless"> A value indicating whether wireless adapters should be excluded. </param>
            <returns> The <see cref="T:Speedy.Application.DeviceId" /> instance. </returns>
        </member>
        <member name="M:Speedy.Application.DeviceId.AddMachineName">
            <summary>
            Adds the machine name to the device identifier.
            </summary>
            <returns> The <see cref="T:Speedy.Application.DeviceId" /> instance. </returns>
        </member>
        <member name="M:Speedy.Application.DeviceId.AddOsVersion">
            <summary>
            Adds the operating system version to the device identifier.
            </summary>
            <returns> The <see cref="T:Speedy.Application.DeviceId" /> instance. </returns>
        </member>
        <member name="M:Speedy.Application.DeviceId.AddUserName">
            <summary>
            Adds the current user name to the device identifier.
            </summary>
            <returns> The <see cref="T:Speedy.Application.DeviceId" /> instance. </returns>
        </member>
        <member name="M:Speedy.Application.DeviceId.ToString">
            <summary>
            Returns a string representation of the device identifier.
            </summary>
            <returns> A string representation of the device identifier. </returns>
        </member>
        <member name="T:Speedy.Application.DeviceIdComponent">
            <summary>
            An implementation of <see cref="T:Speedy.Application.IDeviceIdComponent" /> that uses either a specified value
            or the result of a specified function as its component value.
            </summary>
        </member>
        <member name="F:Speedy.Application.DeviceIdComponent._valueFactory">
            <summary>
            A function that returns the component value.
            </summary>
        </member>
        <member name="M:Speedy.Application.DeviceIdComponent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.DeviceIdComponent" /> class.
            </summary>
            <param name="value"> The component value. </param>
        </member>
        <member name="M:Speedy.Application.DeviceIdComponent.#ctor(System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.DeviceIdComponent" /> class.
            </summary>
            <param name="valueFactory"> A function that returns the component value. </param>
        </member>
        <member name="M:Speedy.Application.DeviceIdComponent.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.DeviceIdComponent" /> class.
            </summary>
            <param name="value"> A function that returns the component value. </param>
        </member>
        <member name="M:Speedy.Application.DeviceIdComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="T:Speedy.Application.IDeviceIdComponent">
            <summary>
            Represents a component that forms part of a device identifier.
            </summary>
        </member>
        <member name="M:Speedy.Application.IDeviceIdComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="T:Speedy.Application.Inactive.InactiveLocationProvider`4">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveLocationProvider`4.#ctor(Speedy.IDispatcher)">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Inactive.InactiveLocationProvider`4.HasPermission">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Inactive.InactiveLocationProvider`4.ProviderName">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveLocationProvider`4.GetCurrentLocationAsync(System.Nullable{System.TimeSpan},System.Nullable{System.Threading.CancellationToken})">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveLocationProvider`4.StartMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveLocationProvider`4.StopMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Inactive.InactiveMediaPlayer">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Inactive.InactiveMediaPlayer.IsPlaying">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveMediaPlayer.Play(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Inactive.InactiveMediaPlayer.Speak(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.INotificationService">
            <summary>
            Represents a service for notifications.
            </summary>
        </member>
        <member name="M:Speedy.Application.INotificationService.Notify(System.String)">
            <summary>
            Notify with the provided message.
            </summary>
            <param name="message"> The message. </param>
        </member>
        <member name="T:Speedy.Application.Internal.Base32ByteArrayEncoder">
            <summary>
            An implementation of <see cref="T:Speedy.Application.Internal.IByteArrayEncoder" /> that encodes byte arrays as Base32 strings.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Base32ByteArrayEncoder._alphabet">
            <summary>
            Gets the alphabet in use.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.Base32ByteArrayEncoder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.Base32ByteArrayEncoder" /> class.
            </summary>
            <param name="alphabet"> The alphabet to use. </param>
        </member>
        <member name="P:Speedy.Application.Internal.Base32ByteArrayEncoder.CrockfordAlphabet">
            <summary>
            Gets the Crockford Base32 alphabet.
            </summary>
            <remarks>
            See https://www.crockford.com/base32.html
            </remarks>
        </member>
        <member name="P:Speedy.Application.Internal.Base32ByteArrayEncoder.Rfc4648Alphabet">
            <summary>
            Gets the RFC-4648 Base32 alphabet.
            </summary>
            <remarks>
            See https://datatracker.ietf.org/doc/html/rfc4648#section-6
            </remarks>
        </member>
        <member name="M:Speedy.Application.Internal.Base32ByteArrayEncoder.Encode(System.Byte[])">
            <summary>
            Encodes the specified byte array as a string.
            </summary>
            <param name="bytes"> The byte array to encode. </param>
            <returns> The byte array encoded as a string. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.ByteArrayHasher">
            <summary>
            An implementation of <see cref="T:Speedy.Application.Internal.IByteArrayHasher" /> that uses an arbitrary <see cref="T:System.Security.Cryptography.HashAlgorithm" />.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.ByteArrayHasher._hashAlgorithmFactory">
            <summary>
            A function that returns a new <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.ByteArrayHasher.#ctor(System.Func{System.Security.Cryptography.HashAlgorithm})">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.ByteArrayHasher" /> class.
            </summary>
            <param name="hashAlgorithmFactory"> A function that returns a new <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance. </param>
        </member>
        <member name="M:Speedy.Application.Internal.ByteArrayHasher.Hash(System.Byte[])">
            <summary>
            Returns a hash of the specified byte array.
            </summary>
            <param name="bytes"> The byte array to hash. </param>
            <returns> A hash of the specified byte array. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.HashDeviceIdFormatter">
            <summary>
            An implementation of <see cref="T:Speedy.Application.Internal.IDeviceIdFormatter" /> that combines the components into a hash.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.HashDeviceIdFormatter._byteArrayEncoder">
            <summary>
            The <see cref="T:Speedy.Application.Internal.IByteArrayEncoder" /> to use to encode the resulting hash.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.HashDeviceIdFormatter._byteArrayHasher">
            <summary>
            The <see cref="T:Speedy.Application.Internal.IByteArrayHasher" /> to use to hash the device ID.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.HashDeviceIdFormatter.#ctor(Speedy.Application.Internal.IByteArrayHasher,Speedy.Application.Internal.IByteArrayEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.HashDeviceIdFormatter" /> class.
            </summary>
            <param name="byteArrayHasher"> The <see cref="T:Speedy.Application.Internal.IByteArrayHasher" /> to use to hash the device ID. </param>
            <param name="byteArrayEncoder"> The <see cref="T:Speedy.Application.Internal.IByteArrayEncoder" /> to use to encode the resulting hash. </param>
        </member>
        <member name="M:Speedy.Application.Internal.HashDeviceIdFormatter.#ctor(System.Func{System.Security.Cryptography.HashAlgorithm},Speedy.Application.Internal.IByteArrayEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.HashDeviceIdFormatter" /> class.
            </summary>
            <param name="hashAlgorithm"> A function that returns the hash algorithm to use. </param>
            <param name="byteArrayEncoder"> The <see cref="T:Speedy.Application.Internal.IByteArrayEncoder" /> to use to encode the resulting hash. </param>
        </member>
        <member name="M:Speedy.Application.Internal.HashDeviceIdFormatter.GetDeviceId(System.Collections.Generic.IDictionary{System.String,Speedy.Application.IDeviceIdComponent})">
            <summary>
            Returns the device identifier string created by combining the specified components.
            </summary>
            <param name="components"> A dictionary containing the components. </param>
            <returns> The device identifier string. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.IByteArrayEncoder">
            <summary>
            Provides functionality to encode a byte array as a string.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.IByteArrayEncoder.Encode(System.Byte[])">
            <summary>
            Encodes the specified byte array as a string.
            </summary>
            <param name="bytes"> The byte array to encode. </param>
            <returns> The byte array encoded as a string. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.IByteArrayHasher">
            <summary>
            Provides functionality to hash a byte array.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.IByteArrayHasher.Hash(System.Byte[])">
            <summary>
            Returns a hash of the specified byte array.
            </summary>
            <param name="bytes"> The byte array to hash. </param>
            <returns> A hash of the specified byte array. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.IDeviceIdFormatter">
            <summary>
            Provides a method to combine a number of component values into a single device identifier string.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.IDeviceIdFormatter.GetDeviceId(System.Collections.Generic.IDictionary{System.String,Speedy.Application.IDeviceIdComponent})">
            <summary>
            Returns the device identifier string created by combining the specified components.
            </summary>
            <param name="components"> A dictionary containing the components. </param>
            <returns> The device identifier string. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.MacAddressDeviceIdComponent">
            <summary>
            An implementation of <see cref="T:Speedy.Application.IDeviceIdComponent" /> that uses the MAC Address of the PC.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.MacAddressDeviceIdComponent._excludeWireless">
            <summary>
            A value determining whether wireless devices should be excluded.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.MacAddressDeviceIdComponent.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.MacAddressDeviceIdComponent" /> class.
            </summary>
            <param name="excludeWireless"> A value determining whether wireless devices should be excluded. </param>
        </member>
        <member name="M:Speedy.Application.Internal.MacAddressDeviceIdComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.MacAddressFormatter">
            <summary>
            Provides functionality to format MAC addresses.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.MacAddressFormatter.FormatMacAddress(System.String)">
            <summary>
            Formats the specified MAC address.
            </summary>
            <param name="input"> The MAC address to format. </param>
            <returns> The formatted MAC address. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.SourceInformationProvider">
            <summary>
            The source of a location provider.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.SourceInformationProvider.#ctor">
            <summary>
            Instantiate an instance of a location provider source.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.SourceInformationProvider.#ctor(Speedy.IDispatcher)">
            <summary>
            Instantiate an instance of a location provider source.
            </summary>
        </member>
        <member name="P:Speedy.Application.Internal.SourceInformationProvider.HasSubProviders">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Internal.SourceInformationProvider.IsEnabled">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Internal.SourceInformationProvider.IsMonitoring">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Internal.SourceInformationProvider.ProviderName">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Internal.SourceInformationProvider.SubProviders">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Internal.SourceInformationProvider.StartMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Internal.SourceInformationProvider.StopMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Internal.Windows.MacAddressComponent">
            <summary>
            An implementation of <see cref="T:Speedy.Application.IDeviceIdComponent" /> that uses the MAC Address of the PC.
            This improves upon the basic <see cref="T:Speedy.Application.Internal.MacAddressDeviceIdComponent" /> by using WMI
            to get better information from either MSFT_NetAdapter or Win32_NetworkAdapter.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.MacAddressComponent._excludeNonPhysical">
            <summary>
            A value determining whether non-physical devices should be excluded.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.MacAddressComponent._excludeWireless">
            <summary>
            A value determining whether wireless devices should be excluded.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.MacAddressComponent.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.Windows.MacAddressComponent" /> class.
            </summary>
            <param name="excludeWireless"> A value determining whether wireless devices should be excluded. </param>
            <param name="excludeNonPhysical"> A value determining whether non-physical devices should be excluded. </param>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.MacAddressComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.MacAddressComponent.GetValueUsingMsftNetAdapter(System.Boolean,System.Boolean)">
            <summary>
            Gets the component value using MSFT_NetAdapter.
            </summary>
            <param name="excludeWireless"> A value determining whether wireless devices should be excluded. </param>
            <param name="excludeNonPhysical"> A value determining whether non-physical devices should be excluded. </param>
            <returns> The component value. </returns>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.MacAddressComponent.GetValueUsingWin32NetworkAdapter(System.Boolean,System.Boolean)">
            <summary>
            Gets the component value using Win32_NetworkAdapter.
            </summary>
            <param name="excludeWireless"> A value determining whether wireless devices should be excluded. </param>
            <param name="excludeNonPhysical"> A value determining whether non-physical devices should be excluded. </param>
            <returns> The component value. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.Windows.RegistryComponent">
            <summary>
            An implementation of <see cref="T:Speedy.Application.IDeviceIdComponent" /> that retrieves its value from the Windows registry.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.RegistryComponent._keyName">
            <summary>
            The name of the registry key.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.RegistryComponent._registryHive">
            <summary>
            The registry hive.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.RegistryComponent._registryView">
            <summary>
            The registry views.
            </summary>
        </member>
        <member name="F:Speedy.Application.Internal.Windows.RegistryComponent._valueName">
            <summary>
            The name of the registry value.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.RegistryComponent.#ctor(Microsoft.Win32.RegistryView,Microsoft.Win32.RegistryHive,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.Windows.RegistryComponent" /> class.
            </summary>
            <param name="registryView"> The registry view. </param>
            <param name="registryHive"> The registry hive. </param>
            <param name="keyName"> The name of the registry key. </param>
            <param name="valueName"> The name of the registry value. </param>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.RegistryComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="T:Speedy.Application.Internal.Windows.SystemDriveSerialNumberComponent">
            <summary>
            An implementation of <see cref="T:Speedy.Application.IDeviceIdComponent" /> that uses the system drive's serial number.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.SystemDriveSerialNumberComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Speedy.Application.Internal.Windows.SystemDriveSerialNumberComponent" /> class.
            </summary>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.SystemDriveSerialNumberComponent.GetValue">
            <summary>
            Gets the component value.
            </summary>
            <returns> The component value. </returns>
        </member>
        <member name="M:Speedy.Application.Internal.Windows.WmiComponent.GetValue">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.MediaPlayer">
            <summary>
            Represents a media player.
            </summary>
        </member>
        <member name="P:Speedy.Application.MediaPlayer.IsPlaying">
            <summary>
            Returns true if the media player is playing.
            </summary>
        </member>
        <member name="M:Speedy.Application.MediaPlayer.Play(System.String)">
            <summary>
            Plays a file.
            </summary>
            <param name="path"> The path to the file to play. </param>
        </member>
        <member name="M:Speedy.Application.MediaPlayer.Speak(System.String)">
            <summary>
            Speak out a text phrase.
            </summary>
            <param name="message"> The message to speak. </param>
        </member>
        <member name="T:Speedy.Application.Settings.Setting`2">
            <summary>
            Represents a setting.
            </summary>
            <typeparam name="T"> The type of the Value of the setting. </typeparam>
            <typeparam name="T2"> The type of the Id of the setting. </typeparam>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.#ctor">
            <summary>
            Represents a setting.
            </summary>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.#ctor(Speedy.IDispatcher)">
            <summary>
            Represents a setting.
            </summary>
            <param name="dispatcher"> The optional dispatcher to use. </param>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`2.Data">
            <summary>
            The typed data of the value property.
            </summary>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`2.Value">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.HasChanges(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.ResetHasChanges(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.UpdateWith(Speedy.Application.Settings.Setting{`0,`1},System.String[])">
            <summary>
            Update the Setting`2 with an update.
            </summary>
            <param name="update"> The update to be applied. </param>
            <param name="exclusions"> An optional set of properties to exclude. </param>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`2.UpdateWith(System.Object,System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Settings.Setting`1">
            <summary>
            Represents a setting.
            </summary>
            <typeparam name="T"> The type of the Value of the setting. </typeparam>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`1.#ctor">
            <summary>
            Represents a setting.
            </summary>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`1.#ctor(Speedy.IDispatcher)">
            <summary>
            Represents a setting.
            </summary>
            <param name="dispatcher"> The optional dispatcher to use. </param>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.CanSync">
            <summary>
            Set to mark this setting as a syncable setting.
            </summary>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.Category">
            <summary>
            The category for the settings.
            </summary>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.ExpiresOn">
            <summary>
            Optionally expires on value, DateTime.MinValue means there is no expiration.
            </summary>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.Id">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.Name">
            <summary>
            The name of the setting.
            </summary>
        </member>
        <member name="P:Speedy.Application.Settings.Setting`1.Value">
            <summary>
            The value of the setting in JSON format.
            </summary>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`1.UpdateWith(Speedy.Application.Settings.Setting{`0},System.String[])">
            <summary>
            Update the Setting`1 with an update.
            </summary>
            <param name="update"> The update to be applied. </param>
            <param name="exclusions"> An optional set of properties to exclude. </param>
        </member>
        <member name="M:Speedy.Application.Settings.Setting`1.UpdateWith(System.Object,System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Settings.SettingsManager`2">
            <summary>
            Represents a manager for a category of settings.
            </summary>
            <typeparam name="T"> The type of the setting. </typeparam>
            <typeparam name="T2"> The type of the setting ID. </typeparam>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.#ctor(System.String,Speedy.IDispatcher)">
            <summary>
            Instantiates an instance of the settings manager.
            </summary>
            <param name="category"> The category name. </param>
            <param name="dispatcher"> The optional dispatcher to use. </param>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.HasChanges(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.Load(Speedy.IRepository{`0,`1})">
            <summary>
            Load the settings from the repository.
            </summary>
            <param name="repository"> The repository contains the settings. </param>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.Load(System.Collections.Generic.ICollection{`0})">
            <summary>
            Load the settings from the repository.
            </summary>
            <param name="repository"> The repository contains the settings. </param>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.ResetHasChanges(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.Save(Speedy.IRepository{`0,`1})">
            <summary>
            Save the settings to the repository.
            </summary>
            <param name="repository"> The repository to store the settings. </param>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.CanSync(System.String)">
            <summary>
            Check to see if the setting should be a local only setting. Any local setting cannot be synced.
            </summary>
            <param name="name"> The setting name to be tested. </param>
            <returns> True if the setting is local otherwise false. </returns>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.Get``1(System.String,``0)">
            <summary>
            Get the value of a setting.
            </summary>
            <typeparam name="TData"> The type of the Data value. </typeparam>
            <param name="name"> The name of the setting. </param>
            <param name="defaultValue"> The default value to return if not found. </param>
            <returns> The value read or the default value. </returns>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.InitializeSetting``1(System.String,``0,System.Action{Speedy.Application.Settings.Setting{``0,`1}})">
            <summary>
            Initialize a setting.
            </summary>
            <param name="name"> The name of the settings. </param>
            <param name="defaultValue"> The default value for the setting. </param>
            <param name="update"> An optional update action. </param>
            <typeparam name="TData"> The type of the data for the setting. </typeparam>
            <returns> The new setting. </returns>
        </member>
        <member name="M:Speedy.Application.Settings.SettingsManager`2.Set``1(System.String,``0)">
            <summary>
            Get the value of a setting.
            </summary>
            <typeparam name="TData"> The type of the Data value. </typeparam>
            <param name="name"> The name of the setting. </param>
            <param name="value"> The value to be set. </param>
            <returns> The value set. </returns>
        </member>
        <member name="T:Speedy.Application.ViewModel`1">
            <summary>
            Represents a viewmodel that has an ID.
            </summary>
            <typeparam name="T"> The type for the ID key. </typeparam>
        </member>
        <member name="M:Speedy.Application.ViewModel`1.#ctor(Speedy.IDispatcher)">
            <summary>
            Instantiates a viewmodel.
            </summary>
            <param name="dispatcher"> The optional dispatcher to use. </param>
        </member>
        <member name="P:Speedy.Application.ViewModel`1.Id">
            <summary>
            Gets or sets the ID of the entity.
            </summary>
        </member>
        <member name="T:Speedy.Application.ViewModel">
            <summary>
            Represents a viewmodel.
            </summary>
        </member>
        <member name="M:Speedy.Application.ViewModel.#ctor(Speedy.IDispatcher)">
            <summary>
            Instantiates a viewmodel.
            </summary>
            <param name="dispatcher"> The optional dispatcher to use. </param>
        </member>
    </members>
</doc>
