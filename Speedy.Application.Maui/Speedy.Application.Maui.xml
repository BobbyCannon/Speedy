<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Speedy.Application.Maui</name>
    </assembly>
    <members>
        <member name="M:Speedy.Application.Maui.Controls.TextBox.OnHandlerChanged">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.Converter.BooleanConverter">
            <summary>
            Represents a converter for a boolean value.
            </summary>
        </member>
        <member name="P:Speedy.Application.Maui.Converter.BooleanConverter.Inverted">
            <summary>
            Flag to determine if this converter is inverting the logic.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Converter.BooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.Converter.BooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.Converter.StringConverter">
            <summary>
            Represents a converter for to string value.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Converter.StringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.Converter.StringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.Converter.VisibilityConverter">
            <summary>
            Represents a converter for a visibility value.
            </summary>
        </member>
        <member name="P:Speedy.Application.Maui.Converter.VisibilityConverter.Inverted">
            <summary>
            Flag to determine if this converter is inverting the logic.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Converter.VisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.Converter.VisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.Extensions.DeviceIdExtensions">
            <summary>
            Extension methods for <see cref="T:Speedy.Application.DeviceId" />.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Extensions.DeviceIdExtensions.AddVendorId(Speedy.Application.DeviceId)">
            <summary>
            Add an ID from the Vendor (platform).
            </summary>
            <param name="builder"> The device ID builder. </param>
            <returns> The device ID updated with the vendor ID if available. </returns>
        </member>
        <member name="T:Speedy.Application.Maui.Extensions.DeviceIdiomExtension">
            <summary>
            Device Idiom Extension
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Extensions.DeviceIdiomExtension.ToDeviceIdiom(Speedy.Data.DeviceType)">
            <summary>
            Convert DeviceType to a DeviceIdiom.
            </summary>
            <param name="deviceType"> The device type to convert. </param>
            <returns> The DeviceIdiom for the DeviceType. </returns>
        </member>
        <member name="M:Speedy.Application.Maui.Extensions.DeviceIdiomExtension.ToDeviceType(Microsoft.Maui.Devices.DeviceIdiom)">
            <summary>
            Convert DeviceIdiom to a DeviceType.
            </summary>
            <param name="deviceIdiom"> The device idiom to convert. </param>
            <returns> The DeviceType for the DeviceIdiom. </returns>
        </member>
        <member name="T:Speedy.Application.Maui.Extensions.DevicePlatformExtension">
            <summary>
            Device Platform Extension
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.Extensions.DevicePlatformExtension.ToDevicePlatform(Microsoft.Maui.Devices.DevicePlatform)">
            <summary>
            Converts a Xamarin Device Platform to a Speedy Device Platform.
            </summary>
            <param name="platform"> The Xamarin Device Platform. </param>
            <returns> The Speedy Device Platform. </returns>
        </member>
        <member name="M:Speedy.Application.Maui.Extensions.DevicePlatformExtension.ToDevicePlatform(Speedy.Data.DevicePlatform)">
            <summary>
            Converts a Speedy Device Platform to a Xamarin Device Platform.
            </summary>
            <param name="platform"> The Speedy Device Platform. </param>
            <returns> The Xamarin Device Platform. </returns>
        </member>
        <member name="T:Speedy.Application.Maui.MauiDispatcher">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiDispatcher.#ctor(Microsoft.Maui.Dispatching.IDispatcher)">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Maui.MauiDispatcher.IsDispatcherThread">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiDispatcher.ExecuteOnDispatcher(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiDispatcher.ExecuteOnDispatcher``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiDispatcher.ExecuteOnDispatcherAsync(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiDispatcher.ExecuteOnDispatcherAsync``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.MauiLocationProvider`4">
            <summary>
            Implementation for LocationProvider.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.MauiLocationProvider`4.#ctor(Speedy.IDispatcher)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.MauiPlatform">
            <summary>
            Maui platform specific implementations.
            </summary>
        </member>
        <member name="P:Speedy.Application.Maui.MauiPlatform.MainActivity">
            <summary>
            The main activity for Android platform.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.MauiPlatform.Initialize(Android.App.Activity)">
            <summary>
            Initialize the xamarin platform for Android.
            </summary>
            <param name="activity"> The activity. </param>
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetApplicationName">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetApplicationVersion">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDeviceId">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDeviceManufacturer">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDeviceModel">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDeviceName">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDevicePlatform">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiRuntimeInformation.GetDeviceType">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiSecureVault.ClearCredential">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiSecureVault.ReadCredentialAsync">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.MauiSecureVault.WriteCredentialAsync">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.NotificationService.Notify(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.LocationProviderImplementation`4">
            <summary>
            Implementation for Feature
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.LocationProviderImplementation`4.#ctor(Speedy.IDispatcher)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.IsLocationAvailable">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.IsLocationEnabled">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.ProviderName">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.SubProviders">
            <inheritdoc />
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.HasPermission">
            <summary>
            True if the location provider has permission to be accessed.
            </summary>
        </member>
        <member name="P:Speedy.Application.Maui.LocationProviderImplementation`4.Manager">
            <summary>
            The android location manager.
            </summary>
        </member>
        <member name="M:Speedy.Application.Maui.LocationProviderImplementation`4.GetCurrentLocationAsync(System.Nullable{System.TimeSpan},System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Gets position async with specified parameters
            </summary>
            <param name="timeout"> Timeout to wait, Default Infinite </param>
            <param name="cancelToken"> Cancellation token </param>
            <returns> ProviderLocation </returns>
            <remarks>
            bug: we must work on thread safety of this method.
            Touching "Manager", which is global, can be very dangerous.
            </remarks>
        </member>
        <member name="M:Speedy.Application.Maui.LocationProviderImplementation`4.StartMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="M:Speedy.Application.Maui.LocationProviderImplementation`4.StopMonitoringAsync">
            <inheritdoc />
        </member>
        <member name="T:Speedy.Application.Maui.PlatformExtensions">
            <summary>
            Extensions for the Android platform.
            </summary>
        </member>
    </members>
</doc>
