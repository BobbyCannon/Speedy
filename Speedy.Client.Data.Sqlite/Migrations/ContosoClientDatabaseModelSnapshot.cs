// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Speedy.Client.Data.Sqlite;

#nullable disable

namespace Speedy.Client.Data.Sqlite.Migrations
{
    [DbContext(typeof(ContosoClientDatabase))]
    partial class ContosoClientDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Speedy.Data.Client.ClientAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("AccountId");

                    b.Property<long>("AddressId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AccountAddressId");

                    b.Property<Guid>("AddressSyncId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountAddressSyncId");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("AccountCreatedOn");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("AccountEmailAddress");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AccountIsDeleted");

                    b.Property<DateTime>("LastClientUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("AccountLastClientUpdate");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("AccountModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("AccountName");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("AccountRoles");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountSyncId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LastClientUpdate")
                        .HasDatabaseName("IX_Accounts_LastClientUpdate");

                    b.HasIndex("SyncId")
                        .IsUnique()
                        .HasDatabaseName("IX_Accounts_SyncId");

                    b.ToTable("Accounts", "dbo");
                });

            modelBuilder.Entity("Speedy.Data.Client.ClientAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("AddressId");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("AddressCity");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("AddressCreatedOn");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AddressIsDeleted");

                    b.Property<DateTime>("LastClientUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("AddressLastClientUpdate");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("AddressLineOne");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("AddressLineTwo");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("AddressModifiedOn");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("AddressPostal");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("AddressState");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AddressSyncId");

                    b.HasKey("Id");

                    b.HasIndex("LastClientUpdate")
                        .HasDatabaseName("IX_Addresses_LastClientUpdate");

                    b.HasIndex("SyncId")
                        .IsUnique()
                        .HasDatabaseName("IX_Addresses_SyncId");

                    b.ToTable("Addresses", "dbo");
                });

            modelBuilder.Entity("Speedy.Data.Client.ClientLogEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastClientUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LastClientUpdate")
                        .HasDatabaseName("IX_LogEvents_LastClientUpdate");

                    b.HasIndex("SyncId")
                        .IsUnique()
                        .HasDatabaseName("IX_LogEvents_SyncId");

                    b.ToTable("LogEvents", "dbo");
                });

            modelBuilder.Entity("Speedy.Data.Client.ClientSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastClientUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SyncId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LastClientUpdate")
                        .HasDatabaseName("IX_Settings_LastClientUpdate");

                    b.HasIndex("SyncId")
                        .IsUnique()
                        .HasDatabaseName("IX_Settings_SyncId");

                    b.ToTable("Settings", "dbo");
                });

            modelBuilder.Entity("Speedy.Data.Client.ClientAccount", b =>
                {
                    b.HasOne("Speedy.Data.Client.ClientAddress", "Address")
                        .WithMany("Accounts")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Speedy.Data.Client.ClientAddress", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
